openapi: "3.0.3"

info:
  title: "Rhythmate API"
  description: "RhythmateのAPIです。"
  version: "1.0"

servers:
  - url: "http://localhost:3000/v1"
    description: "ローカル環境"
  - url: "http://example.com"
    description: "本番環境"

tags:
  - name: "users"
    description: "ユーザ情報の操作"
  - name: "quests"
    description: "クエスト情報の操作"
  - name: "tags"
    description: "タグ情報の操作"
  - name: "weeklyReports"
    description: "週次レポート情報の操作"

paths:
  "/users/auth":
    post:
      tags: ["users"]
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AuthRequest"
      responses:
        "200":
          description: "成功"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthResponse"
        "400":
          description: "クライアントエラー"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: "サーバーエラー"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  "/users/authenticated":
    get:
      tags: ["users"]
      responses:
        "200":
          description: "成功"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetLoginUserResponse"
        "400":
          description: "認証エラー"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: "サーバーエラー"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  "/users/logout":
    post:
      tags: ["users"]
      responses:
        "200":
          description: "成功"
        "400":
          description: "認証エラー"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: "サーバーエラー"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  "/users/me":
    get:
      tags: ["users"]
      responses:
        "200":
          description: "成功"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetLoginUserResponse"
        "400":
          description: "認証エラー"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: "サーバーエラー"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    patch:
      tags: ["users"]
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateLoginUserRequest"
      responses:
        "200":
          description: "成功"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetLoginUserResponse"
        "400":
          description: "クライアントエラー"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "認証エラー"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: "サーバーエラー"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    delete:
      tags: ["users"]
      responses:
        "200":
          description: "成功"
        "400":
          description: "認証エラー"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: "サーバーエラー"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  "/quests":
    post:
      tags: ["quests"]
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateQuestRequest"
      responses:
        "200":
          description: "成功"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateQuestResponse"
        "400":
          description: "クライアントエラー"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: "認証エラー"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: "サーバーエラー"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    get:
      tags: ["quests"]
      responses:
        "200":
          description: "成功"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListQuestsResponse"
        "401":
          description: "認証エラー"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: "サーバーエラー"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  "/quests/:id":
    patch:
      tags: ["quests"]
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateQuestRequest"
      responses:
        "200":
          description: "成功"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateQuestResponse"
        "400":
          description: "クライアントエラー"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: "認証エラー"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: "サーバーエラー"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    delete:
      tags: ["quests"]
      deprecated: false
      responses:
        "200":
          description: "成功"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteQuestResponse"
        "401":
          description: "認証エラー"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: "サーバーエラー"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  "/quests/start/:id":
    patch:
      tags: ["quests"]
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateQuestRequest"
      responses:
        "200":
          description: "成功"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateQuestResponse"
        "400":
          description: "クライアントエラー"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: "認証エラー"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: "サーバーエラー"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  "/quests/finish/:id":
    patch:
      tags: ["quests"]
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateQuestRequest"
      responses:
        "200":
          description: "成功"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateQuestResponse"
        "400":
          description: "クライアントエラー"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: "認証エラー"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: "サーバーエラー"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  "/quests/force-finish/:id":
    patch:
      tags: ["quests"]
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateQuestRequest"
      responses:
        "200":
          description: "成功"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateQuestResponse"
        "400":
          description: "クライアントエラー"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: "認証エラー"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: "サーバーエラー"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  "/tags":
    get:
      tags: ["tags"]
      responses:
        "200":
          description: "成功"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagsResponse"
        "401":
          description: "認証エラー"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: "サーバーエラー"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    post:
      tags: ["tags"]
      deprecated: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TagsCreateRequest"
      responses:
        "200":
          description: "成功"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagsCreateResponse"
        "400":
          description: "クライアントエラー"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: "認証エラー"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: "サーバーエラー"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  "/tags/:id":
    patch:
      tags: ["tags"]
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TagsCreateRequest"
      responses:
        "200":
          description: "成功"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagsCreateResponse"
        "400":
          description: "クライアントエラー"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: "認証エラー"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: "サーバーエラー"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    delete:
      tags: ["tags"]
      deprecated: false
      responses:
        "200":
          description: "成功"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagsDeleteResponse"
        "401":
          description: "認証エラー"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: "サーバーエラー"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  "/weeklyReports":
    get:
      tags: ["weeklyReports"]
      responses:
        "200":
          description: "成功"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListWeeklyReportResponse"
        "401":
          description: "認証エラー"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: "サーバーエラー"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  "/weeklyReports/feedback/:weeklyReportId":
    get:
      tags: ["weeklyReports"]
      responses:
        "200":
          description: "成功"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetWeeklyReportFeedBackResponse"
        "401":
          description: "認証エラー"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: "サーバーエラー"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    post:
      tags: ["weeklyReports"]
      responses:
        "200":
          description: "成功"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenerateWeeklyReportFeedBackResponse"
        "400":
          description: "クライアントエラー"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: "認証エラー"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: "サーバーエラー"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

components:
  schemas:
    AuthResponse:
      type: object
      properties:
        status:
          type: string
    GetLoginUserResponse:
      type: object
      properties:
        status:
          type: string
        name:
          type: string
        email:
          type: string
        exp:
          type: integer
        level:
          type: integer
        imageUrl:
          type: string
    DeleteUserResponse:
      type: object
      properties:
        status:
          type: string
    AuthRequest:
      type: object
      properties:
        id_token:
          type: string
    UpdateLoginUserRequest:
      type: object
      properties:
        name:
          type: string
    ErrorResponse:
      type: object
      properties:
        status: { type: string, example: "error" }
        message: { type: string, example: "errorMsg" }
      required:
        - message
    CreateQuestRequest:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        starts_at:
          type: string
        minutes:
          type: integer
        tag_id:
          type: string
        difficulty:
          type: string
        days:
          type: array
          items:
            type: string
        state:
          type: string
          enum: ["INACTIVE", "ACTIVE"]
    UpdateQuestRequest:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        starts_at:
          type: string
        started_at:
          type: string
        minutes:
          type: integer
        tag_id:
          type: string
        difficulty:
          type: string
        state:
          type: string
        is_succeeded:
          type: boolean
        continuation_level:
          type: integer
        days:
          type: array
          items:
            type: string
        weekly_completion_count:
          type: integer
        total_completion_count:
          type: integer
    QuestBaseResponse:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        starts_at:
          type: string
        started_at:
          type: string
        minutes:
          type: integer
        tag_id:
          type: string
        difficulty:
          type: string
        state:
          type: string
        is_succeeded:
          type: boolean
        days:
          type: array
          items:
            type: string
        continuation_level:
          type: integer
        weekly_frequency:
          type: integer
        weekly_completion_count:
          type: integer
        total_completion_count:
          type: integer
    CreateQuestResponse:
      allOf:
        - $ref: '#/components/schemas/QuestBaseResponse'
        - type: object
          properties:
            status:
              type: string
    UpdateQuestResponse:
      allOf:
        - $ref: '#/components/schemas/QuestBaseResponse'
        - type: object
          properties:
            status:
              type: string
    DeleteQuestResponse:
      type: object
      properties:
        status:
          type: string
    ListQuestsResponse:
      type: object
      properties:
        status:
          type: string
        quests:
          type: array
          items:
            $ref: '#/components/schemas/QuestBaseResponse'
    TagsResponse:
      type: object
      properties:
        tags:
          {
            type: array,
            example:
              [
                { id: 1, name: "TechStudy", color: "Blue"},
                { id: 2, name: "EnglishStudy", color: "Red"},
                { id: 3, name: "Health", color: "Green"},
              ],
          }
    TagsCreateRequest:
      type: object
      properties:
        name: { type: string, example: "TechStudy" }
        color: { type: string, example: "Blue" }
      required:
        - name
    TagsCreateResponse:
      type: object
      properties:
        status: { type: string, example: "ok" }
    TagsDeleteResponse:
      type: object
      properties:
        status: { type: string, example: "ok" }
    ListWeeklyReportResponse:
      type: object
      properties:
        status: { type: string }
        weeklyReports:
          type: array
          items:
            type: object
            properties:
              id: { type: string }
              completed_quests: { type: integer }
              failed_quests: { type: integer }
              completed_percentage: { type: number }
              streak_days: { type: integer }
              completed_quests_each_day: { type: array, items: { type: integer } }
              failed_quests_each_day: { type: array, items: { type: integer } }
              start_date: { type: string }
              end_date: { type: string }
              user_id: { type: string }
    GenerateWeeklyReportFeedBackResponse:
      type: object
      properties:
        status: { type: string }
        feedBack: { type: string }
    GetWeeklyReportFeedBackResponse:
      type: object
      properties:
        status: { type: string }
        feedBack: { type: string }
